Описание макро-вставок шаблонов.

[table_name] - имя таблицы
[webform_version] - версия генератора кода
[param:mode] - вставить параметр "mode" из конфигурации текущего шаблона (определяется в makescript.json для каждой таблицы)
[include:template_filepath] - вставить другой шаблон (с парсингом)
<CALC>2^4</CALC> - посчитать выражение (Invoke-Expression)

<AL>...[V]...</AL> - Вертикальное выравнивание блока по меткам [V] (добить пробелами так, что бы это место было друг над другом). С табуляцией пока не дружим, превращаем в пробелы
<IF expression>...[ELSE]...</IF> - проверяет условие и вставляет блок. вложенность тэга (IF внутри IF) не поддерживается
expression:			- набор аттрибутов определяющих условия (если несколько, то совпасть должны все)
	FE="FieldName"  - наличие заданного поля в таблице
	FL="N" 			- флаг поля. если перечислено несколько флагов, то обязательно совпадение всех (работает только внутри <FL> блока)
	FC="{param} -gt 1024"	- посчитать условие с параметром param, поддерживаются -gt, -lt, -eq, -ne, -qe, -le, скобки ..., (работает только внутри <FL> блока). Пример:
			FC="{9} -gt 32" - размер поля > 32 , 
			FC='{3} -eq "String"' - тип поля совместим со String , 
	NULLABLE="true"	- сравнение со свойством поля Nullable (т.е. может ли иметь пустое значение)
[ELSE]				- сокращенный разделитель ветвления, до [ELSE] работает если expression = true, после [ELSE] если expression = false
<ELIF expression>...[ELSE]...</ELIF> - продолжает предыдущее условение в режиме else if, цепочка else выполняется только в пределах того же блока FL что и первый IF

<FL params>строка_формата<DL params>строка_разделителя</DL></FL> - формирует список полей таблицы по заданному формату. FL могут быть вложенные, соотв. сначала обрабатываются внутренние

В формат подставляются данные о текущем поле:
{0} - field name
{1} - field title (description or name if null one)
{2} - SQL data type with size/scale/precision (varchar(64))
{3} - C data type string
{4} - Nullable C data type string
{5} - Lookup Table
{6} - Lookup table key field
{7} - Field number
{8} - Referenced table primary key (for R filter)
{9} - Data size (Max input length of form elements)

params:

Types 		- Отобрать поля соответствующие маске флагов (типов), в которой большая буква - включить класс полей, маленькая - исключить
		& - флаг для отбора на одновременное совпадение всех условий, иначе любое совпавшее минус запреты. 
		A - Все поля, кроме скрытых "h" и вычисляемых "v"
		H - Cкрытые поля (обычно те, которые не передаются в стандартных вызовах, но надо поминить что они могут возвращаться в результатах)
		P - Primary keys
		L - Lookup fields (Foreign keys)
		T - Recursive tree fields (lookup to self)
		G - Guids
		S - Text/strings fields (char, varchar, ...)
		I - Integer fields (int, bigint)
		N - Numeric fields (Money, Float, ...)
		D - Date|time fields
		B - Blob fields
		X - Binary fields (timestamp)
		F - Flags fields (fl_ ...)
		V - вычисляемые поля имен (SelectName)
		S - поля подходящие для составления SelectName
		R - поля других таблиц ссылающиеся на эту таблицу (заполнятся как обычные Lookup). не имеет смысла использовать R совместно с другими флагами
		< - признак продолжения пред.списка, т.е. надо ли вставить разделитель перед первым элементом
	если не указано ни одного разрешающего фильтра (большая буква), то используются "A" (все поля, кроме v и h) и потом из него вычитаются указанные запреты. 
	если на одно поле срабатывает несколько фильтров или флагов, то преимущество у запретов
	скрытые типы полей нужно явно включать (H или V) для появления в списке

Like 		- Отобрать поля по похожести имени заданному шаблону
				"*" - все (по-умолчанию)
				"*name" - только те, что заканчиваются на name и т.п.


Примеры:
отобрать все поля, кроме BLOB и binary (а так же скрытых и вычисляемых, т.к. они явно не разрешены). т.к. разделителей нет, слепится все в кучу:
<FL Types="bx">{0}</FL>

отобрать первичные ключи и любые поля с типом дата и сформировать список через запятую:
<FL Types="PD">{0}<DL>, </DL></FL>

отобрать только поля-флаги с типом дата, сделать список через запятую и перенос строки:
<FL Types="&FD">{0}<DL>, 
</DL></FL> 

отобрать поля текстового типа заканчивающиеся на name (Fullname, FirstName и т.п.)
<FL Like="*name" Types="S">{0} </FL>

сформировать список внешних ссылок в виде [локальное поле] => [таблица куда ссылаемся].[поле на которое ссылаемся]
<FL Types="L">{0} => {5}.{6}</FL>

сформировать список ссылок на эту таблицу из других
<FL Types="R">
	Обнаружена внешняя ссылка: {5}.{6} -> [table_name].{0})
</FL> 

